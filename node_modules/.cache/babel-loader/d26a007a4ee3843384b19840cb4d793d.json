{"ast":null,"code":"var _jsxFileName = \"/Users/alicjaniewiadomska/Work/publictransport-vis/src/components/sidebar/BusStopsCheckBoxes.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { updateStopsType } from '../../redux/actions';\nimport { StopsType } from '../../redux/actionTypes';\n\nconst Checkbox = _ref => {\n  let {\n    label,\n    value,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }), label);\n};\n\nclass BusStopsCheckBoxes extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      pickOneValue: false,\n      markAreaValue: false\n    };\n\n    this.handleChange = () => {\n      const {\n        pickOneValue,\n        markAreaValue\n      } = this.state;\n      const {\n        updateStopsType\n      } = this.props;\n\n      if (pickOneValue) {\n        updateStopsType(StopsType.one);\n      } else if (markAreaValue) {\n        updateStopsType(StopsType.area);\n      } else {\n        updateStopsType(StopsType.all);\n      }\n    };\n\n    this.handleChangeOne = () => {\n      const {\n        pickOneValue,\n        markAreaValue\n      } = this.state;\n      const isMarked = !pickOneValue;\n      this.setState({\n        pickOneValue: isMarked,\n        markAreaValue: isMarked ? false : markAreaValue\n      }, this.handleChange);\n    };\n\n    this.handleChangeArea = () => {\n      const {\n        pickOneValue,\n        markAreaValue\n      } = this.state;\n      const isMarked = !markAreaValue;\n      this.setState({\n        pickOneValue: isMarked ? false : pickOneValue,\n        markAreaValue: isMarked\n      }, this.handleChange);\n    };\n  }\n\n  render() {\n    const {\n      pickOneValue,\n      markAreaValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkBoxContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: \"  Wybierz pojedynczy przystanek\",\n      value: pickOneValue,\n      onChange: this.handleChangeOne,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkBoxContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: \"  Zaznacz obszar\",\n      value: markAreaValue,\n      onChange: this.handleChangeArea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => state;\n\nconst dispatchToProps = {\n  updateStopsType\n};\nexport default connect(mapStateToProps, dispatchToProps)(BusStopsCheckBoxes);","map":{"version":3,"sources":["/Users/alicjaniewiadomska/Work/publictransport-vis/src/components/sidebar/BusStopsCheckBoxes.js"],"names":["React","Component","connect","updateStopsType","StopsType","Checkbox","label","value","onChange","BusStopsCheckBoxes","state","pickOneValue","markAreaValue","handleChange","props","one","area","all","handleChangeOne","isMarked","setState","handleChangeArea","render","mapStateToProps","dispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { updateStopsType } from '../../redux/actions';\nimport { StopsType } from '../../redux/actionTypes'\n\nconst Checkbox = ({ label, value, onChange }) => {\n    return (\n      <label>\n        <input type=\"checkbox\" checked={value} onChange={onChange} />\n        {label}\n      </label>\n    );\n};\n\nclass BusStopsCheckBoxes extends Component {\n    state = {\n        pickOneValue: false,\n        markAreaValue: false,\n    }\n\n    handleChange = () => {\n        const { pickOneValue, markAreaValue } = this.state;\n        const { updateStopsType } = this.props; \n        if (pickOneValue) {\n            updateStopsType(StopsType.one);\n        } else if (markAreaValue) {\n            updateStopsType(StopsType.area);\n        } else {\n            updateStopsType(StopsType.all);\n        }\n    }\n\n    handleChangeOne = () => {\n        const { pickOneValue, markAreaValue } = this.state;\n        const isMarked = !pickOneValue;\n        this.setState({ pickOneValue: isMarked, markAreaValue: isMarked ? false : markAreaValue }, this.handleChange);\n    }\n\n    handleChangeArea = () => {\n        const { pickOneValue, markAreaValue } = this.state;\n        const isMarked = !markAreaValue;\n        this.setState({ pickOneValue: isMarked ? false : pickOneValue, markAreaValue: isMarked }, this.handleChange);\n    }\n\n    render() {\n        const { pickOneValue, markAreaValue } = this.state;\n        return (\n            <React.Fragment>\n                <div className=\"checkBoxContainer\">\n                    <Checkbox\n                        label=\"  Wybierz pojedynczy przystanek\"\n                        value={pickOneValue}\n                        onChange={this.handleChangeOne}\n                    />\n                </div>\n                <div className=\"checkBoxContainer\">\n                    <Checkbox\n                        label=\"  Zaznacz obszar\"\n                        value={markAreaValue}\n                        onChange={this.handleChangeArea}\n                    />\n                </div>\n            </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => state;\nconst dispatchToProps = { updateStopsType };\n\nexport default connect(mapStateToProps, dispatchToProps)(BusStopsCheckBoxes);"]},"metadata":{},"sourceType":"module"}