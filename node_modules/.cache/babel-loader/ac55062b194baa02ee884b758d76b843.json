{"ast":null,"code":"var _jsxFileName = \"/Users/alicjaniewiadomska/Work/publictransport-vis/src/components/Home.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Container } from \"react-bootstrap\";\nimport CustomMap from \"../map/CustomMap\";\nimport SidePanel from \"./sidebar/SidePanel\";\nimport NavPadding from \"../styled/NavPadding\";\nimport { fetchBusStops, fetchFromList } from '../api/apiService';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setServerData = data => {\n      this.setState({\n        serverData: data\n      }, () => {\n        this.setState({\n          renderServerMap: true\n        });\n      });\n    };\n\n    this.setServerWait = () => {\n      this.setState({\n        renderServerMap: false\n      });\n    };\n\n    this.successHandler = newData => {\n      this.setState({\n        busStopsData: newData,\n        isLoading: false\n      }, () => this.setState({\n        renderBaseMap: true\n      }));\n    };\n\n    this.successHandler = newData => {\n      this.setState({\n        busStopsData: newData,\n        isLoading: false\n      }, () => this.setState({\n        renderBaseMap: true\n      }));\n    };\n\n    this.state = {\n      serverData: [],\n      busStopsData: [],\n      linesData: [],\n      renderBaseMap: false,\n      isLoading: true,\n      renderServerMap: false\n    };\n  }\n\n  componentDidMount() {\n    fetchBusStops(this.successHandler);\n    fetchFromList(data => this.setState({\n      linesData: data\n    }), {\n      filters: {}\n    });\n  }\n\n  render() {\n    const {\n      renderBaseMap,\n      busStopsData,\n      linesData,\n      serverData,\n      isLoading,\n      renderServerMap\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"p-0 bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavPadding, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(SidePanel, {\n      data: busStopsData,\n      setData: this.setServerData,\n      setServerWait: this.setServerWait,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CustomMap, {\n      isLoading: isLoading,\n      renderBaseMap: renderBaseMap,\n      data: serverData,\n      pointData: busStopsData,\n      linesData: linesData,\n      renderHeatMapFrom: renderServerMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => state;\n\nconst dispatchToProps = dispatch => ({\n  dispatch\n});\n\nexport default connect(mapStateToProps, dispatchToProps)(Home);","map":{"version":3,"sources":["/Users/alicjaniewiadomska/Work/publictransport-vis/src/components/Home.js"],"names":["React","Component","connect","Container","CustomMap","SidePanel","NavPadding","fetchBusStops","fetchFromList","Home","constructor","props","setServerData","data","setState","serverData","renderServerMap","setServerWait","successHandler","newData","busStopsData","isLoading","renderBaseMap","state","linesData","componentDidMount","filters","render","mapStateToProps","dispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Container } from \"react-bootstrap\";\nimport CustomMap from \"../map/CustomMap\";\n\nimport SidePanel from \"./sidebar/SidePanel\";\nimport NavPadding from \"../styled/NavPadding\";\nimport { fetchBusStops, fetchFromList } from '../api/apiService';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverData: [],\n            busStopsData: [],\n            linesData: [],\n            renderBaseMap: false,\n            isLoading: true,\n            renderServerMap: false,\n        }\n    }\n\n    setServerData = (data) => {\n        this.setState({ serverData: data }, \n            () => { this.setState({ renderServerMap: true }) });\n    }\n\n    setServerWait = () => {\n        this.setState({ renderServerMap: false });\n    }\n\n    successHandler = (newData) => {\n        this.setState({ busStopsData: newData, isLoading: false }, \n            () => this.setState({ renderBaseMap: true }));\n    }\n\n    successHandler = (newData) => {\n        this.setState({ busStopsData: newData, isLoading: false }, \n            () => this.setState({ renderBaseMap: true }));\n    }\n\n    componentDidMount() {\n        fetchBusStops(this.successHandler);\n        fetchFromList(data => this.setState({ linesData: data}), { filters: {} });\n    }\n\n    render() {\n        const { renderBaseMap, busStopsData, linesData, serverData, isLoading, renderServerMap } = this.state;\n        return (\n            <Container fluid className=\"p-0 bg-dark\" >\n                <NavPadding />\n                    <SidePanel data={busStopsData} setData={this.setServerData} setServerWait={this.setServerWait} />\n                    <CustomMap \n                        isLoading={isLoading}\n                        renderBaseMap={renderBaseMap}\n                        data={serverData}\n                        pointData={busStopsData}\n                        linesData={linesData}\n                        renderHeatMapFrom={renderServerMap}\n                    />\n            </Container >\n        );\n    }\n\n}\n\nconst mapStateToProps = state => state;\nconst dispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(mapStateToProps, dispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}