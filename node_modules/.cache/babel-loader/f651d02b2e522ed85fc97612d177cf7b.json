{"ast":null,"code":"export function unpackIndexedGeometry(geometry) {\n  const {\n    indices,\n    attributes\n  } = geometry;\n\n  if (!indices) {\n    return geometry;\n  }\n\n  const vertexCount = indices.value.length;\n  const unpackedAttributes = {};\n\n  for (const attributeName in attributes) {\n    const attribute = attributes[attributeName];\n    const {\n      constant,\n      value,\n      size\n    } = attribute;\n\n    if (constant || !size) {\n      continue;\n    }\n\n    const unpackedValue = new value.constructor(vertexCount * size);\n\n    for (let x = 0; x < vertexCount; ++x) {\n      const index = indices.value[x];\n\n      for (let i = 0; i < size; i++) {\n        unpackedValue[x * size + i] = value[index * size + i];\n      }\n    }\n\n    unpackedAttributes[attributeName] = {\n      size,\n      value: unpackedValue\n    };\n  }\n\n  return {\n    attributes: Object.assign({}, attributes, unpackedAttributes)\n  };\n}","map":null,"metadata":{},"sourceType":"module"}