{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport createStyles from './StickySection.styles';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { stickyNodeType } from '../PropTypes';\nimport { StickyContext } from '../Contexts';\nimport Hook from './Hook';\nimport Sticky from './Sticky';\n\nvar StickySection = function (_Component) {\n  _inherits(StickySection, _Component);\n\n  function StickySection() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, StickySection);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = StickySection.__proto__ || Object.getPrototypeOf(StickySection)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      stickyStyle: {},\n      position: 'top',\n      setStickyStyle: function setStickyStyle(stickyStyle) {\n        _this.setState({\n          stickyStyle: stickyStyle\n        });\n      },\n      stickyZIndex: 1\n    }, _this.styles = createStyles(), _this.handleTopEnter = function (entryState) {\n      _this.setPosition(entryState.isTopBoundary ? 'fixed' : 'top');\n    }, _this.handleTopLeave = function (entryState) {\n      if (entryState.isOffsetTop) {\n        _this.setPosition('fixed');\n      }\n    }, _this.handleIntersect = function (entryState) {\n      if (entryState.isTopBoundary || entryState.isBottomVisible && !entryState.isTopVisible) {\n        _this.setPosition('fixed');\n      } else if (entryState.isTopVisible || entryState.isOffsetBottom) {\n        _this.setPosition('top');\n      } else if (entryState.isOffsetTop) {\n        _this.setPosition('bottom');\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(StickySection, [{\n    key: 'setPosition',\n    value: function setPosition(position) {\n      if (this.state.position !== position) {\n        this.setState({\n          position: position\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          sticky = _props.sticky,\n          stickyZIndex = _props.stickyZIndex,\n          style = _props.style,\n          debugId = _props.debugId,\n          other = _objectWithoutProperties(_props, ['children', 'sticky', 'stickyZIndex', 'style', 'debugId']),\n          stickyStyle = this.state.stickyStyle,\n          styles = this.styles;\n\n      return React.createElement(StickyContext.Provider, {\n        value: this.state\n      }, React.createElement('div', _extends({}, other, {\n        style: styles.container(style)\n      }), React.createElement('div', {\n        style: stickyStyle\n      }), React.createElement(Hook, {\n        debugId: debugId + '(top)',\n        onEnter: this.handleTopEnter,\n        onLeave: this.handleTopLeave,\n        style: styles.topHook\n      }), children, sticky && React.createElement(Sticky, {\n        style: styles.sticky(stickyZIndex)\n      }, sticky), React.createElement(Hook, {\n        debugId: debugId + '(bottom)',\n        onIntersect: this.handleIntersect,\n        style: styles.bottomHook(stickyStyle.height)\n      })));\n    }\n  }]);\n\n  return StickySection;\n}(Component);\n\nStickySection.propTypes = {\n  children: PropTypes.node,\n  sticky: stickyNodeType,\n  style: PropTypes.object,\n  stickyZIndex: PropTypes.number,\n  debugId: PropTypes.string\n};\nexport default StickySection;","map":null,"metadata":{},"sourceType":"module"}