{"ast":null,"code":"import { random } from '../utils/random';\nconst fs = `\\\nuniform float radius;\nuniform vec2 delta;\n\nvec4 triangleBlur_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\n  vec2 adjustedDelta = delta * radius / texSize;\n\n  vec4 color = vec4(0.0);\n  float total = 0.0;\n  float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n\n  for (float t = -30.0; t <= 30.0; t++) {\n    float percent = (t + offset - 0.5) / 30.0;\n    float weight = 1.0 - abs(percent);\n    vec4 sample = texture2D(texture, texCoord + adjustedDelta * percent);\n    sample.rgb *= sample.a;\n\n    color += sample * weight;\n    total += weight;\n  }\n\n  color = color / total;\n  color.rgb /= color.a + 0.00001;\n\n  return color;\n}\n`;\nconst uniforms = {\n  radius: {\n    value: 20,\n    min: 0,\n    softMax: 100\n  },\n  delta: {\n    value: [1, 0],\n    private: true\n  }\n};\nexport const triangleBlur = {\n  name: 'triangleBlur',\n  uniforms,\n  fs,\n  dependencies: [random],\n  passes: [{\n    sampler: true,\n    uniforms: {\n      delta: [1, 0]\n    }\n  }, {\n    sampler: true,\n    uniforms: {\n      delta: [0, 1]\n    }\n  }]\n};","map":null,"metadata":{},"sourceType":"module"}