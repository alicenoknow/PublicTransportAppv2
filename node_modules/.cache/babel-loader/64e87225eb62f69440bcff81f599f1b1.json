{"ast":null,"code":"export function padStringToByteAlignment(string, byteAlignment) {\n  const length = string.length;\n  const paddedLength = Math.ceil(length / byteAlignment) * byteAlignment;\n  const padding = paddedLength - length;\n  let whitespace = '';\n\n  for (let i = 0; i < padding; ++i) {\n    whitespace += ' ';\n  }\n\n  return string + whitespace;\n}\nexport function copyStringToDataView(dataView, byteOffset, string, byteLength) {\n  if (dataView) {\n    for (let i = 0; i < byteLength; i++) {\n      dataView.setUint8(byteOffset + i, string.charCodeAt(i));\n    }\n  }\n\n  return byteOffset + byteLength;\n}\nexport function copyBinaryToDataView(dataView, byteOffset, binary, byteLength) {\n  if (dataView) {\n    for (let i = 0; i < byteLength; i++) {\n      dataView.setUint8(byteOffset + i, binary[i]);\n    }\n  }\n\n  return byteOffset + byteLength;\n}","map":null,"metadata":{},"sourceType":"module"}