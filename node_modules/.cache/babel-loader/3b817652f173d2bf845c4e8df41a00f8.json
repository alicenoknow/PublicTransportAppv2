{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { noop } from './util';\nimport EntryState from './EntryState';\n\nvar Intersection = function () {\n  function Intersection(_ref) {\n    var onEnter = _ref.onEnter,\n        onLeave = _ref.onLeave,\n        onIntersect = _ref.onIntersect,\n        _ref$debugId = _ref.debugId,\n        debugId = _ref$debugId === undefined ? '' : _ref$debugId;\n\n    _classCallCheck(this, Intersection);\n\n    this._onIntersect = onIntersect || noop;\n    this.onEnter = onEnter || noop;\n    this.onLeave = onLeave || noop;\n    this._isIntersecting = false;\n    this.debugId = debugId; // useful for debug\n  }\n\n  _createClass(Intersection, [{\n    key: 'onIntersect',\n    value: function onIntersect(eventData) {\n      var entry = eventData.entry;\n      var isIntersecting = entry.isIntersecting;\n      var entryState = new EntryState(entry, this.debugId);\n\n      if (this._isIntersecting !== isIntersecting) {\n        this._isIntersecting = isIntersecting;\n        this[isIntersecting ? 'onEnter' : 'onLeave'](entryState);\n      }\n\n      this._onIntersect(entryState);\n    }\n  }]);\n\n  return Intersection;\n}();\n\nexport default Intersection;","map":null,"metadata":{},"sourceType":"module"}