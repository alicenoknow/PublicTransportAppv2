{"ast":null,"code":"var _jsxFileName = \"/Users/alicjaniewiadomska/Work/publictransport-vis/src/components/sidebar/DirectionTypeCheckBoxes.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { updateDirectionType } from '../../redux/actions';\nimport { DirectionType } from '../../redux/actionTypes';\n\nconst Checkbox = _ref => {\n  let {\n    label,\n    value,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }), label);\n};\n\nclass DirectionTypeCheckBoxes extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      fromValue: true,\n      toValue: false\n    };\n\n    this.handleChange = () => {\n      const {\n        fromValue\n      } = this.state;\n      const {\n        updateDirectionType\n      } = this.props;\n\n      if (fromValue) {\n        updateDirectionType(DirectionType.from);\n      } else {\n        updateDirectionType(DirectionType.to);\n      }\n    };\n\n    this.handleFrom = () => {\n      const {\n        fromValue\n      } = this.state;\n      const isMarked = !fromValue;\n      this.setState({\n        fromValue: isMarked,\n        toValue: isMarked ? false : true\n      }, this.handleChange);\n    };\n\n    this.handleTo = () => {\n      const {\n        toValue\n      } = this.state;\n      const isMarked = !toValue;\n      this.setState({\n        fromValue: isMarked ? false : true,\n        toValue: isMarked\n      }, this.handleChange);\n    };\n  }\n\n  render() {\n    const {\n      fromValue,\n      toValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkBoxContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: \"  Ruch z tego przystanku\",\n      value: fromValue,\n      onChange: this.handleFrom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkBoxContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: \"  Ruch do tego przystanku\",\n      value: toValue,\n      onChange: this.handleTo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => state;\n\nconst dispatchToProps = {\n  updateDirectionType\n};\nexport default connect(mapStateToProps, dispatchToProps)(DirectionTypeCheckBoxes);","map":{"version":3,"sources":["/Users/alicjaniewiadomska/Work/publictransport-vis/src/components/sidebar/DirectionTypeCheckBoxes.js"],"names":["React","Component","connect","updateDirectionType","DirectionType","Checkbox","label","value","onChange","DirectionTypeCheckBoxes","state","fromValue","toValue","handleChange","props","from","to","handleFrom","isMarked","setState","handleTo","render","mapStateToProps","dispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { updateDirectionType } from '../../redux/actions';\nimport { DirectionType } from '../../redux/actionTypes'\n\nconst Checkbox = ({ label, value, onChange }) => {\n    return (\n      <label>\n        <input type=\"checkbox\" checked={value} onChange={onChange} />\n        {label}\n      </label>\n    );\n};\n\nclass DirectionTypeCheckBoxes extends Component {\n    state = {\n        fromValue: true,\n        toValue: false,\n    }\n\n    handleChange = () => {\n        const { fromValue } = this.state;\n        const { updateDirectionType } = this.props; \n\n        if (fromValue) {\n            updateDirectionType(DirectionType.from);\n        } else {\n            updateDirectionType(DirectionType.to);\n        }\n    }\n\n    handleFrom = () => {\n        const { fromValue } = this.state;\n        const isMarked = !fromValue;\n        this.setState({ fromValue: isMarked, toValue: isMarked ? false : true }, this.handleChange);\n    }\n\n    handleTo = () => {\n        const { toValue } = this.state;\n        const isMarked = !toValue;\n        this.setState({ fromValue: isMarked ? false : true, toValue: isMarked }, this.handleChange);\n    }\n\n    render() {\n        const { fromValue, toValue } = this.state;\n        return (\n            <React.Fragment>\n                <div className=\"checkBoxContainer\">\n                    <Checkbox\n                        label=\"  Ruch z tego przystanku\"\n                        value={fromValue}\n                        onChange={this.handleFrom}\n                    />\n                </div>\n                <div className=\"checkBoxContainer\">\n                    <Checkbox\n                        label=\"  Ruch do tego przystanku\"\n                        value={toValue}\n                        onChange={this.handleTo}\n                    />\n                </div>\n            </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => state;\nconst dispatchToProps = { updateDirectionType };\n\nexport default connect(mapStateToProps, dispatchToProps)(DirectionTypeCheckBoxes);"]},"metadata":{},"sourceType":"module"}