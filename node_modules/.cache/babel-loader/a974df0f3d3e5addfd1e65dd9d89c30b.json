{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { createId } from './util';\n\nvar MapPolyfill = function () {\n  function MapPolyfill() {\n    _classCallCheck(this, MapPolyfill);\n\n    this._store = [];\n    this._key = '__map' + createId();\n  }\n\n  _createClass(MapPolyfill, [{\n    key: 'has',\n    value: function has(obj) {\n      return !!~this._store.indexOf(obj);\n    }\n  }, {\n    key: 'set',\n    value: function set(obj, val) {\n      if (!this.has(obj)) {\n        obj[this._key] = val;\n\n        this._store.push(obj);\n      }\n    }\n  }, {\n    key: 'get',\n    value: function get(obj) {\n      if (this.has(obj)) return obj[this._key];\n    }\n  }, {\n    key: 'delete',\n    value: function _delete(obj) {\n      var index = this._store.indexOf(obj);\n\n      if (index > -1) {\n        delete obj[this._key];\n\n        this._store.splice(index, 1);\n      }\n    }\n  }, {\n    key: 'size',\n    get: function get() {\n      return this._store.length;\n    }\n  }]);\n\n  return MapPolyfill;\n}();\n\nexport default Map || MapPolyfill;","map":null,"metadata":{},"sourceType":"module"}