{"ast":null,"code":"var _jsxFileName = \"/Users/alicjaniewiadomska/Work/publictransport-vis/src/components/sidebar/WeekDayPicker.js\";\nimport React, { Component } from \"react\";\n\nconst CheckBox = props => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"weekdayCheckbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    key: props.id,\n    onChange: props.handleCheckElement,\n    onClick: props.handleCheckElement,\n    type: \"checkbox\",\n    checked: props.isChecked,\n    value: props.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 8\n    }\n  }), \" \", props.value);\n};\n\nclass WeekDayPicker extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      weekdays: [{\n        id: 0,\n        value: \"poniedziałek\",\n        isChecked: true\n      }, {\n        id: 1,\n        value: \"wtorek\",\n        isChecked: true\n      }, {\n        id: 2,\n        value: \"środa\",\n        isChecked: true\n      }, {\n        id: 3,\n        value: \"czwartek\",\n        isChecked: true\n      }, {\n        id: 4,\n        value: \"piątek\",\n        isChecked: true\n      }, {\n        id: 5,\n        value: \"sobota\",\n        isChecked: true\n      }, {\n        id: 6,\n        value: \"niedziela\",\n        isChecked: true\n      }]\n    };\n\n    this.handleCheckElement = event => {\n      let weekdays = this.state.weekdays;\n      weekdays.forEach(day => {\n        if (day.value === event.target.value) day.isChecked = event.target.checked;\n      });\n      this.setState({\n        weekdays: weekdays\n      });\n      this.props.onWeekDaysChange(weekdays.map(day => {\n        if (day.isChecked) {\n          return day.id;\n        }\n\n        return null;\n      }).filter(id => id !== null));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weekdaysPickerContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, this.state.weekdays.map(day => {\n      return /*#__PURE__*/React.createElement(CheckBox, Object.assign({\n        key: day.id,\n        handleCheckElement: this.handleCheckElement\n      }, day, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }));\n    }));\n  }\n\n}\n\nexport default WeekDayPicker;","map":{"version":3,"sources":["/Users/alicjaniewiadomska/Work/publictransport-vis/src/components/sidebar/WeekDayPicker.js"],"names":["React","Component","CheckBox","props","id","handleCheckElement","isChecked","value","WeekDayPicker","state","weekdays","event","forEach","day","target","checked","setState","onWeekDaysChange","map","filter","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nconst CheckBox = props => {\n    return (\n        <p className=\"weekdayCheckbox\">\n       <input key={props.id} onChange={props.handleCheckElement} onClick={props.handleCheckElement} type=\"checkbox\" checked={props.isChecked} value={props.value} /> {props.value}\n       </p>\n    );\n}\n\nclass WeekDayPicker extends Component {\n    state = {\n        weekdays: [\n            {id: 0, value: \"poniedziałek\", isChecked: true},\n            {id: 1, value: \"wtorek\", isChecked: true},\n            {id: 2, value: \"środa\", isChecked: true},\n            {id: 3, value: \"czwartek\", isChecked: true},\n            {id: 4, value: \"piątek\", isChecked: true},\n            {id: 5, value: \"sobota\", isChecked: true},\n            {id: 6, value: \"niedziela\", isChecked: true}\n        ]\n      };\n\n    handleCheckElement = (event) => {\n        let weekdays = this.state.weekdays;\n        weekdays.forEach(day => {\n           if (day.value === event.target.value)\n              day.isChecked =  event.target.checked;\n        })\n        this.setState({weekdays: weekdays});\n        this.props.onWeekDaysChange(weekdays.map(day => {\n            if (day.isChecked){\n                return day.id;\n            }\n            return null;\n        }).filter(id => id !== null));\n    }\n\n    render() {\n        return (\n            <div className=\"weekdaysPickerContainer\">\n                {this.state.weekdays.map((day) => {\n                    return (<CheckBox key={day.id} handleCheckElement={this.handleCheckElement}  {...day} />)\n                })}\n            </div>\n        );\n    }\n}\n\nexport default WeekDayPicker;"]},"metadata":{},"sourceType":"module"}