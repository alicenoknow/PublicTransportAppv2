{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nvar style = {\n  transition: 'opacity 0.3s'\n};\n\nvar Loading = function (_Component) {\n  _inherits(Loading, _Component);\n\n  function Loading() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Loading);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loading.__proto__ || Object.getPrototypeOf(Loading)).call.apply(_ref, [this].concat(args))), _this), _this.highlighted = 0, _this.circles = [6, 20, 34], _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Loading, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var length = this.circles.length;\n      this.intervalId = setInterval(function () {\n        var next = _this2.highlighted + 1;\n        _this2.highlighted = next >= length ? 0 : next;\n\n        _this2.forceUpdate();\n      }, 300);\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearInterval(this.intervalId);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var color = this.props.color,\n          highlighted = this.highlighted,\n          circles = this.circles;\n      return React.createElement('svg', {\n        xmlns: 'http://www.w3.org/2000/svg',\n        viewBox: '0 0 40 40',\n        width: '32px',\n        height: '32px'\n      }, circles.map(function (cx, index) {\n        return React.createElement('circle', {\n          key: index,\n          cx: cx,\n          cy: '20',\n          r: '3',\n          fill: color,\n          opacity: highlighted === index ? 1 : 0.2,\n          style: style\n        });\n      }));\n    }\n  }]);\n\n  return Loading;\n}(Component);\n\nLoading.propTypes = {\n  color: PropTypes.string.isRequired\n};\nexport default Loading;","map":null,"metadata":{},"sourceType":"module"}