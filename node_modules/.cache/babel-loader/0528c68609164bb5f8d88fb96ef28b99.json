{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nexport default function Arrow(_ref) {\n  var color = _ref.color,\n      other = _objectWithoutProperties(_ref, ['color']);\n\n  return React.createElement('svg', _extends({\n    xmlns: 'http://www.w3.org/2000/svg',\n    viewBox: '0 0 40 40',\n    width: '32px',\n    height: '32px'\n  }, other), React.createElement('line', {\n    x1: '20',\n    y1: '4',\n    x2: '20',\n    y2: '32',\n    strokeLinecap: 'round',\n    strokeWidth: 3,\n    stroke: color\n  }), React.createElement('polyline', {\n    points: '10 24 20 34 30 24',\n    strokeLinecap: 'round',\n    strokeLinejoin: 'round',\n    strokeWidth: 3,\n    fill: 'none',\n    stroke: color\n  }));\n}\nArrow.propTypes = {\n  color: PropTypes.string.isRequired\n};","map":null,"metadata":{},"sourceType":"module"}