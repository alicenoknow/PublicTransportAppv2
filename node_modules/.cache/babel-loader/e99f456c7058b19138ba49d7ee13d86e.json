{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar RefreshState = function () {\n  function RefreshState() {\n    _classCallCheck(this, RefreshState);\n  }\n\n  _createClass(RefreshState, [{\n    key: \"mount\",\n    value: function mount(reactInstance) {\n      this.reactInstance = reactInstance;\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      this.reactInstance = null;\n    }\n  }, {\n    key: \"call\",\n    value: function call(method) {\n      if (this.reactInstance) {\n        var _reactInstance;\n\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        (_reactInstance = this.reactInstance)[method].apply(_reactInstance, args);\n      }\n    }\n  }]);\n\n  return RefreshState;\n}();\n\nexport default RefreshState;","map":null,"metadata":{},"sourceType":"module"}