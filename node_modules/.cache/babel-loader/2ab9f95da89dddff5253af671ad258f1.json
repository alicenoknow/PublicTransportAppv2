{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport createStyles from './Sticky.styles';\nimport React, { Component, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { stickyNodeType } from '../PropTypes';\nimport { StickyContext } from '../Contexts';\nimport Fixed from './Fixed';\n\nvar Sticky = function (_Component) {\n  _inherits(Sticky, _Component);\n\n  function Sticky() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Sticky);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Sticky.__proto__ || Object.getPrototypeOf(Sticky)).call.apply(_ref, [this].concat(args))), _this), _this.styles = createStyles(), _this.saveDOMNode = function (dom) {\n      if (dom && !_this.dom && _this.stickyContext) {\n        var _dom$getBoundingClien = dom.getBoundingClientRect(),\n            height = _dom$getBoundingClien.height;\n\n        _this.stickyContext.setStickyStyle({\n          height: height\n        });\n      }\n\n      _this.dom = dom;\n    }, _this.renderChildren = function (stickyContext) {\n      _this.stickyContext = stickyContext;\n      var _this2 = _this,\n          style = _this2.props.style,\n          position = _this2.stickyContext.position,\n          styles = _this2.styles;\n\n      if (position === 'fixed') {\n        return React.createElement(Fixed, null, React.createElement('div', {\n          ref: _this.saveDOMNode,\n          style: styles.fixed(style)\n        }, _this.returnChildren(position)));\n      } else {\n        var topOrBottom = position;\n        return React.createElement('div', {\n          ref: _this.saveDOMNode,\n          style: styles.relative(style, topOrBottom)\n        }, _this.returnChildren(position));\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Sticky, [{\n    key: 'returnChildren',\n    value: function returnChildren(position) {\n      var children = this.props.children;\n      return isValidElement(children) ? children : children(position);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement(StickyContext.Consumer, null, this.renderChildren);\n    }\n  }]);\n\n  return Sticky;\n}(Component);\n\nSticky.propTypes = {\n  children: stickyNodeType,\n  style: PropTypes.object\n};\nexport default Sticky;","map":null,"metadata":{},"sourceType":"module"}