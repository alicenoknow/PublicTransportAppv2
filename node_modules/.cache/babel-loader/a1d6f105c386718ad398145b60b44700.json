{"ast":null,"code":"import { fs } from '@loaders.gl/loader-utils';\nexport async function readArrayBuffer(file, start, length) {\n  if (typeof file === 'number') {\n    return await fs._readToArrayBuffer(file, start, length);\n  }\n\n  if (!(file instanceof Blob)) {\n    file = new Blob([file]);\n  }\n\n  const slice = file.slice(start, start + length);\n  return await readBlob(slice);\n}\nexport async function readBlob(blob) {\n  return await new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = event => {\n      var _event$target;\n\n      return resolve(event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result);\n    };\n\n    fileReader.onerror = error => reject(error);\n\n    fileReader.readAsArrayBuffer(blob);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}