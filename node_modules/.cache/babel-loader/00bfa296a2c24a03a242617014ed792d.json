{"ast":null,"code":"import * as React from 'react';\nimport { useMemo } from 'react';\nconst messages = {\n  moveToday: 'Today',\n  moveBack: 'Navigate back',\n  moveForward: 'Navigate forward',\n  dateButton: 'Select date',\n  openCombobox: 'open combobox',\n  emptyList: 'There are no items in this list',\n  emptyFilter: 'The filter returned no results',\n  createOption: (_value, searchTerm) => [' Create option', searchTerm && ' ', searchTerm && /*#__PURE__*/React.createElement(\"strong\", {\n    key: \"_\"\n  }, `\"${searchTerm}\"`)],\n  tagsLabel: 'Selected items',\n  removeLabel: 'Remove selected item',\n  noneSelected: 'no selected items',\n  selectedItems: labels => `Selected items: ${labels.join(', ')}`,\n  // number\n  increment: 'Increment value',\n  decrement: 'Decrement value'\n};\nconst DEFAULTS = {};\nexport function getMessages() {\n  let defaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULTS;\n  let processed = {};\n  Object.keys(messages).forEach(message => {\n    let value = defaults[message];\n    if (value == null) value = messages[message];\n    processed[message] = typeof value === 'function' ? value : () => value;\n  });\n  return processed;\n}\nexport const useMessagesWithDefaults = defaults => useMemo(() => getMessages(defaults), [defaults]);","map":null,"metadata":{},"sourceType":"module"}