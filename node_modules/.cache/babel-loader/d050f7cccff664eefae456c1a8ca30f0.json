{"ast":null,"code":"import WEBGL_LIMITS from './webgl-limits-table';\nimport { isWebGL2, getContextDebugInfo } from '@luma.gl/gltools';\nexport function getContextLimits(gl) {\n  gl.luma = gl.luma || {};\n\n  if (!gl.luma.limits) {\n    gl.luma.limits = {};\n    gl.luma.webgl1MinLimits = {};\n    gl.luma.webgl2MinLimits = {};\n    const isWebgl2 = isWebGL2(gl);\n\n    for (const parameter in WEBGL_LIMITS) {\n      const limit = WEBGL_LIMITS[parameter];\n      const webgl1MinLimit = limit.gl1;\n      const webgl2MinLimit = 'gl2' in limit ? limit.gl2 : limit.gl1;\n      const minLimit = isWebgl2 ? webgl2MinLimit : webgl1MinLimit;\n      const limitNotAvailable = 'gl2' in limit && !isWebgl2 || 'extension' in limit && !gl.getExtension(limit.extension);\n      const value = limitNotAvailable ? minLimit : gl.getParameter(parameter);\n      gl.luma.limits[parameter] = value;\n      gl.luma.webgl1MinLimits[parameter] = webgl1MinLimit;\n      gl.luma.webgl2MinLimits[parameter] = webgl2MinLimit;\n    }\n  }\n\n  return gl.luma.limits;\n}\nexport function getGLContextInfo(gl) {\n  gl.luma = gl.luma || {};\n  const info = getContextDebugInfo(gl);\n\n  if (!gl.luma.info) {\n    gl.luma.info = {\n      [37445]: info.vendor,\n      [37446]: info.renderer,\n      [7936]: info.vendorMasked,\n      [7937]: info.rendererMasked,\n      [7938]: info.version,\n      [35724]: info.shadingLanguageVersion\n    };\n  }\n\n  return gl.luma.info;\n}\nexport function getContextInfo(gl) {\n  return Object.assign(getContextDebugInfo(gl), {\n    limits: getContextLimits(gl),\n    info: getGLContextInfo(gl),\n    webgl1MinLimits: gl.luma.webgl1MinLimits,\n    webgl2MinLimits: gl.luma.webgl2MinLimits\n  });\n}","map":null,"metadata":{},"sourceType":"module"}