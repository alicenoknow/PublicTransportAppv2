{"ast":null,"code":"const _excluded = [\"className\", \"disabled\", \"label\", \"icon\", \"busy\", \"children\", \"spinner\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport cn from 'classnames';\nimport * as React from 'react';\nimport { Spinner } from './Icon';\n\nfunction Button(_ref) {\n  let {\n    className,\n    disabled,\n    label,\n    icon,\n    busy,\n    children,\n    spinner = Spinner\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    tabIndex: -1\n  }, props, {\n    title: label,\n    type: \"button\",\n    disabled: disabled,\n    \"aria-label\": label,\n    \"aria-disabled\": disabled,\n    className: cn(className, 'rw-btn')\n  }), busy ? spinner : icon, children);\n}\n\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}