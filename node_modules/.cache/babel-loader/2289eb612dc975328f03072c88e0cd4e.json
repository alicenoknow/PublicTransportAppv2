{"ast":null,"code":"const fs = `\\\nuniform float brightness;\nuniform float contrast;\n\nvec4 brightnessContrast_filterColor(vec4 color) {\n  color.rgb += brightness;\n  if (contrast > 0.0) {\n    color.rgb = (color.rgb - 0.5) / (1.0 - contrast) + 0.5;\n  } else {\n    color.rgb = (color.rgb - 0.5) * (1.0 + contrast) + 0.5;\n  }\n  return color;\n}\n\nvec4 brightnessContrast_filterColor(vec4 color, vec2 texSize, vec2 texCoords) {\n  return brightnessContrast_filterColor(color);\n}\n`;\nconst uniforms = {\n  brightness: {\n    value: 0,\n    min: -1,\n    max: 1\n  },\n  contrast: {\n    value: 0,\n    min: -1,\n    max: 1\n  }\n};\nexport const brightnessContrast = {\n  name: 'brightnessContrast',\n  uniforms,\n  fs,\n  passes: [{\n    filter: true\n  }]\n};","map":null,"metadata":{},"sourceType":"module"}